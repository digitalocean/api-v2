{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "id": "schema/domain-record",
  "title": "DigitalOcean API - Domain Record",
  "description": "Domain records are the DNS records for a domain.",
  "type": [
    "object"
  ],
  "definitions": {
    "id": {
      "description": "unique identifier of domain record",
      "example": 32,
      "format": "integer",
      "readOnly": true,
      "type": [
        "integer"
      ]
    },
    "identity": {
      "anyOf": [
        {
          "$ref": "/schema/domain-record#/definitions/id"
        }
      ]
    },
    "type": {
      "description": "type of DNS record (ex: A, CNAME, TXT, ...)",
      "example": "CNAME",
      "format": "string",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "name": {
      "description": "name to use for the DNS record",
      "example": "subdomain",
      "format": "string",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "data": {
      "description": "value to use for the DNS record",
      "example": "@",
      "format": "string",
      "readOnly": false,
      "type": [
        "string"
      ]
    },
    "priority": {
      "description": "priority for SRV records",
      "example": null,
      "format": "integer",
      "readOnly": false,
      "type": [
        "integer",
        "null"
      ]
    },
    "port": {
      "description": "port for SRV records",
      "example": null,
      "format": "integer",
      "readOnly": false,
      "type": [
        "integer",
        "null"
      ]
    },
    "weight": {
      "description": "weight for SRV records",
      "example": null,
      "format": "integer",
      "readOnly": false,
      "type": [
        "integer",
        "null"
      ]
    }
  },
  "links": [
    {
      "description": "Create a new domain record.",
      "href": "/domains/{(%2Fschema%2Fdomain%23%2Fdefinitions%2Fidentity)}/records",
      "method": "POST",
      "rel": "create",
      "schema": {
        "properties": {
          "type": {
            "$ref": "/schema/domain-record#/definitions/type"
          },
          "name": {
            "$ref": "/schema/domain-record#/definitions/name"
          },
          "data": {
            "$ref": "/schema/domain-record#/definitions/data"
          },
          "priority": {
            "$ref": "/schema/domain-record#/definitions/priority"
          },
          "port": {
            "$ref": "/schema/domain-record#/definitions/port"
          },
          "weight": {
            "$ref": "/schema/domain-record#/definitions/weight"
          }
        },
        "required": [
          "type",
          "data"
        ],
        "optional": [
          "name",
          "priority",
          "port",
          "weight"
        ]
      },
      "title": "Create"
    },
    {
      "description": "Delete an existing domain record.",
      "href": "/domains/{(%2Fschema%2Fdomain%23%2Fdefinitions%2Fidentity)}/records/{(%2Fschema%2Fdomain-record%23%2Fdefinitions%2Fidentity)}",
      "method": "DELETE",
      "rel": "destroy",
      "title": "Delete"
    },
    {
      "description": "Info for existing domain records.",
      "href": "/domains/{(%2Fschema%2Fdomain%23%2Fdefinitions%2Fidentity)}/records/{(%2Fschema%2Fdomain-record%23%2Fdefinitions%2Fidentity)}",
      "method": "GET",
      "rel": "self",
      "title": "Info"
    },
    {
      "description": "List existing domain records.",
      "href": "/domains/{(%2Fschema%2Fdomain%23%2Fdefinitions%2Fidentity)}/records",
      "method": "GET",
      "rel": "instances",
      "title": "List"
    },
    {
      "description": "Update an existing domain records.",
      "href": "/domains/{(%2Fschema%2Fdomain%23%2Fdefinitions%2Fidentity)}/records/{(%2Fschema%2Fdomain-record%23%2Fdefinitions%2Fidentity)}",
      "method": "PATCH",
      "rel": "update",
      "schema": {
        "properties": {
          "type": {
            "$ref": "/schema/domain-record#/definitions/type"
          },
          "name": {
            "$ref": "/schema/domain-record#/definitions/name"
          },
          "data": {
            "$ref": "/schema/domain-record#/definitions/data"
          },
          "priority": {
            "$ref": "/schema/domain-record#/definitions/priority"
          },
          "port": {
            "$ref": "/schema/domain-record#/definitions/port"
          },
          "weight": {
            "$ref": "/schema/domain-record#/definitions/weight"
          }
        },
        "required": [
          "type",
          "data"
        ],
        "optional": [
          "name",
          "priority",
          "port",
          "weight"
        ]
      },
      "title": "Update"
    }
  ],
  "properties": {
    "id": {
      "$ref": "/schema/domain-record#/definitions/id"
    },
    "type": {
      "$ref": "/schema/domain-record#/definitions/type"
    },
    "name": {
      "$ref": "/schema/domain-record#/definitions/name"
    },
    "data": {
      "$ref": "/schema/domain-record#/definitions/data"
    },
    "priority": {
      "$ref": "/schema/domain-record#/definitions/priority"
    },
    "port": {
      "$ref": "/schema/domain-record#/definitions/port"
    },
    "weight": {
      "$ref": "/schema/domain-record#/definitions/weight"
    }
  }
}